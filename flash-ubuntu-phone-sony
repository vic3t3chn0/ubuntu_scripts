#!/bin/bash
set -ex

CACHEDIR=cache

function wait-for-device {
    until adb shell true 2> /dev/null
    do
        sleep 1
    done
}

function download {
    mkdir -p $CACHEDIR/ && pushd $CACHEDIR/
    rm -f *
    # timestamp file for latest images
    #wget -c http://neon.plasma-mobile.org/cm_stamp
    wget -c http://neon.plasma-mobile.org/rootfs_stamp

    # stripped cm file
    #$HOME/plama-apps/flash/cache/cm-`cat cm_stamp`.zip
    ln -s cm-`cat cm_stamp`.zip cm-stripped.zip
    
    # lxc userspace tools
    wget -c https://jenkins.linuxcontainers.org/job/lxc-build-android/lastSuccessfulBuild/artifact/lxc-android.tar.gz
    # rootfs for plasma mobile
    wget -c http://neon.plasma-mobile.org/rootfs/plasma-rootfs-`cat rootfs_stamp`.tar.gz
    ln -s plasma-rootfs-`cat rootfs_stamp`.tar.gz plasma-rootfs.tar.gz
    


    # rootfs for plasma mobile
    #wget -c http://neon.plasma-mobile.org/rootfs/plasma-rootfs-`cat rootfs_stamp`.tar.gz
    ln -s rootfs-`cat rootfs_stamp`.tar.gz jessie-rootfs.tar.gz
    
    # config for lxc container
    wget -c https://raw.githubusercontent.com/plasma-phone-packaging/CM/master/lxc-system-config
    popd
}

function flash-phone {
    echo "Waiting for device to be in the fastboot mode"
    fastboot getvar product

    echo "Flashing recovery"
    fastboot format cache
    fastboot format userdata
    fastboot flash recovery $CACHEDIR/twrp-3.0.2-0-togari.img
    fastboot boot $CACHEDIR/twrp-3.0.2-0-togari.img

    wait-for-device

    echo "Performing complete wipe first"
    echo "--update_package=/cache/cm.zip" > $CACHEDIR/command
    adb push $CACHEDIR/command /cache/recovery/command
    adb push `readlink -f $CACHEDIR/cm-stripped.zip` /cache/cm.zip

    adb reboot recovery
    sleep 2
    adb wait-for-device

    echo "Done flashing cyanogenmod, now flashing rootfs and lxc"
}

function plasmafy {
    adb root
    sleep 5
    adb wait-for-device

    echo "Installing lxc userspace tools"
    adb push $CACHEDIR/lxc-android.tar.gz /data/
    adb shell tar xf /data/lxc-android.tar.gz

    echo "Installing plasma rootfs"
    adb push `readlink -f $CACHEDIR/plasma-rootfs.tar.gz` /data/plasma-rootfs.tar.gz
    adb shell mkdir -p /data/lxc/containers/system/rootfs/
    adb shell tar xf /data/plasma-rootfs.tar.gz -C /data/lxc/containers/system/rootfs/
    adb shell rm /data/plasma-rootfs.tar.gz /data/lxc-android.tar.gz
    adb push $CACHEDIR/lxc-system-config /data/lxc/containers/system/config

    # TODO: FIXME: should not be needed
    adb shell mkdir -p /data/lxc/containers/system/rootfs/sys/fs/cgroup/
    echo "Done flashing"
}

function jessiefy {
    adb root
    sleep 5
    adb wait-for-device

    echo "Installing lxc userspace tools"
    adb push $CACHEDIR/lxc-android.tar.gz /data/
    adb shell tar xf /data/lxc-android.tar.gz

    echo "Installing plasma rootfs"
    adb push `readlink -f $CACHEDIR/jessie-rootfs.tar.gz` /data/jessie-rootfs.tar.gz
    adb shell mkdir -p /data/lxc/containers/system/rootfs/
    adb shell tar xf /data/jessie-rootfs.tar.gz -C /data/lxc/containers/system/rootfs/
    adb shell rm /data/jessie-rootfs.tar.gz /data/lxc-android.tar.gz
    adb push $CACHEDIR/lxc-system-config /data/lxc/containers/system/config

    # TODO: FIXME: should not be needed
    adb shell mkdir -p /data/lxc/containers/system/rootfs/sys/fs/cgroup/
    echo "Done flashing"
}
while getopts ":c" opt; do
  case $opt in
    c)
	  echo "Option provided to use cache, not downloading files again"
	  NOCACHE=1
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

if [ -z "$NOCACHE" ]; then
	download
    true
fi
flash-phone
#plasmafy
jessiefy

echo "flashed cm version `cat $CACHEDIR/cm_stamp`"
echo "flashed plasma rootfs version `cat $CACHEDIR/rootfs_stamp`"
adb reboot
